{"ast":null,"code":"import _asyncToGenerator from \"D:/Graph Tracking/GraphTracking/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"D:/Graph Tracking/GraphTracking/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport * as i0 from \"@angular/core\";\nexport let TreeTrackingComponent = /*#__PURE__*/(() => {\n  class TreeTrackingComponent {\n    constructor() {\n      this.data = {\n        'CONTENT': `\n        <div style=\"height: 300px; width: 500px ; margin: 5px; padding: 5px\">\n          <div > <h5>Dimension Lot : AXL00012</h5> </div>\n          <div > <h5>Dimension Article : Perly Ta3i</h5> </div>\n          <div > <h5>Dimension DLC : 2023-01-25</h5> </div>\n        </div>\n          `,\n        'SUB': [{\n          'ROW': 0,\n          'COLUMN': 0,\n          'X': 0,\n          'Y': 0,\n          'H': 0,\n          'W': 0,\n          'CONTENT': `<div style=\"height: 100px; width: 500px; margin: 5px; padding: 5px\" id=\"htmlToDraw\">\n                        <h1>Titre 1 de devision dsdsd sdmsd </h1>\n                      </div>`,\n          'SUB': [{\n            'ROW': 0,\n            'COLUMN': 0,\n            'X': 0,\n            'Y': 0,\n            'H': 0,\n            'W': 0,\n            'CONTENT': '<div style=\"height: 100px; width: 500px; margin: 5px; padding: 5px\" id=\"htmlToDraw\"><h1>Titre 1-1 de devision dsdsd sdmsd </h1></div>',\n            'SUB': []\n          }, {\n            'ROW': 0,\n            'COLUMN': 0,\n            'X': 0,\n            'Y': 0,\n            'H': 0,\n            'W': 0,\n            'CONTENT': '<div style=\"height: 100px; width: 500px; margin: 5px; padding: 5px\"  id=\"htmlToDraw\"><h1>Titre 1-2 de devision hksdkj sksdlknsd lkklsd </h1></div>',\n            'SUB': [{\n              'ROW': 0,\n              'COLUMN': 0,\n              'X': 0,\n              'Y': 0,\n              'H': 0,\n              'W': 0,\n              'CONTENT': '<div style=\"height: 100px; width: 500px; margin: 5px; padding: 5px\"  id=\"htmlToDraw\"><h1>Titre 1-2-1 de devision</h1></div>',\n              'SUB': []\n            }]\n          }, {\n            'ROW': 0,\n            'COLUMN': 0,\n            'X': 0,\n            'Y': 0,\n            'H': 0,\n            'W': 0,\n            'CONTENT': '<div style=\"height: 100px; width: 500px; margin: 5px; padding: 5px\"  id=\"htmlToDraw\"><h1>Titre 1-3 de devision</h1><br><h3> Fatim ait cheikh</h3></div>',\n            'SUB': [{\n              'ROW': 0,\n              'COLUMN': 0,\n              'X': 0,\n              'Y': 0,\n              'H': 0,\n              'W': 0,\n              'CONTENT': '<div style=\"height: 100px; width: 500px; margin: 5px; padding: 5px\"  id=\"htmlToDraw\"><h1>Titre 1-3-1 de devision</h1></div>',\n              'SUB': []\n            }, {\n              'ROW': 0,\n              'COLUMN': 0,\n              'X': 0,\n              'Y': 0,\n              'H': 0,\n              'W': 0,\n              'CONTENT': '<div style=\"height: 100px; width: 500px; margin: 5px; padding: 5px\"  id=\"htmlToDraw\"><h1>Titre 1-3-2 de devision hksdkj sksdlknsd lkklsd </h1></div>',\n              'SUB': []\n            }, {\n              'ROW': 0,\n              'COLUMN': 0,\n              'X': 0,\n              'Y': 0,\n              'H': 0,\n              'W': 0,\n              'CONTENT': '<div style=\"height: 300px; width: 500px; margin: 5px; padding: 5px\"  id=\"htmlToDraw\"><h1>Titre 1-3-3 de devision dsdsd sdmsd </h1><br><h2>HOURAFY MOHAMMED</h2></div>',\n              'SUB': []\n            }]\n          }]\n        }, {\n          'ROW': 0,\n          'COLUMN': 0,\n          'X': 0,\n          'Y': 0,\n          'H': 0,\n          'W': 0,\n          'CONTENT': '<div  style=\"height: 100px; width: 500px\" id=\"htmlToDraw\"><h1>Titre 2 de devision hksdkj sksdlknsd lkklsd </h1></div>',\n          'SUB': [{\n            'ROW': 0,\n            'COLUMN': 0,\n            'X': 0,\n            'Y': 0,\n            'H': 0,\n            'W': 0,\n            'CONTENT': '<div style=\"height: 300px; width: 500px\"  id=\"htmlToDraw\"><h1>Titre 2-1 de devision</h1></div>',\n            'SUB': []\n          }, {\n            'ROW': 0,\n            'COLUMN': 0,\n            'X': 0,\n            'Y': 0,\n            'H': 0,\n            'W': 0,\n            'CONTENT': '<div style=\"height: 300px; width: 500px\"  id=\"htmlToDraw\"><h1>Titre 2-2 de devision</h1><br><br><h4>HI YOUSSEFE</h4></div>',\n            'SUB': [{\n              'ROW': 0,\n              'COLUMN': 0,\n              'X': 0,\n              'Y': 0,\n              'H': 0,\n              'W': 0,\n              'CONTENT': '<div style=\"height: 300px; width: 500px\"  id=\"htmlToDraw\"><h1>Titre 2-2-1 de devision</h1></div>',\n              'SUB': []\n            }, {\n              'ROW': 0,\n              'COLUMN': 0,\n              'X': 0,\n              'Y': 0,\n              'H': 0,\n              'W': 0,\n              'CONTENT': '<div style=\"height: 300px; width: 500px\"  id=\"htmlToDraw\"><h1>Titre 2-2-2 de devision dsdsd sdmsd </h1></div>',\n              'SUB': []\n            }]\n          }, {\n            'ROW': 0,\n            'COLUMN': 0,\n            'X': 0,\n            'Y': 0,\n            'H': 0,\n            'W': 0,\n            'CONTENT': '<div style=\"height: 300px; width: 500px\"  id=\"htmlToDraw\"><h1>Titre 2-3 de devision</h1></div>',\n            'SUB': [{\n              'ROW': 0,\n              'COLUMN': 0,\n              'X': 0,\n              'Y': 0,\n              'H': 0,\n              'W': 0,\n              'CONTENT': '<div style=\"height: 300px; width: 500px\"  id=\"htmlToDraw\"><h1>Titre 2-3-1 de devision dsdsd sdmsd </h1></div>',\n              'SUB': []\n            }, {\n              'ROW': 0,\n              'COLUMN': 0,\n              'X': 0,\n              'Y': 0,\n              'H': 0,\n              'W': 0,\n              'CONTENT': '<div style=\"height: 300px; width: 500px\"  id=\"htmlToDraw\"><h1>Titre 2-3-2 de devision hksdkj sksdlknsd lkklsd </h1></div>',\n              'SUB': []\n            }]\n          }]\n        }]\n      };\n      this.configGraph = {\n        'margin': {\n          x: 5,\n          y: 5\n        },\n        'space': {\n          h: 60,\n          w: 150\n        },\n        'borders': {\n          'withBorder': true,\n          'stroke': 'black',\n          'strokeWidth': 2\n        },\n        'arrowWidth': 5\n      };\n      this.y = 0;\n      this.configMaxH = {};\n      this.configMaxW = {};\n      this.dimGraphe = {\n        somHeight: 0,\n        somWidth: 0\n      };\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.addAttributs(_this.data);\n        // Use the shadow DOM to get the Width and the height of the div to show.\n        const shadowRoot = document.createElement('div').attachShadow({\n          mode: 'open'\n        });\n        // Define the Height & Width.\n        yield _this.defineHW(_this.data, shadowRoot);\n        // Define the ROW & COLUMN.\n        yield _this.defineCoordinates(_this.data, 0, 0);\n        // Define the X & Y of eatch ROW and COLUMN.\n        yield _this.defineMaxDimByRowColumn(_this.data);\n        // Define the X & Y of eatch Node.\n        yield _this.calculatePositionNode(_this.data);\n        // Define the Width & Height of the graph.\n        _this.dimGraphe = yield _this.getGrapheDimension();\n        const node = yield document.getElementById('GraphId');\n        // Draw the graph.\n        yield _this.drawGraph(_this.data, node);\n      })();\n    }\n    addAttributs(node) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        node.ROW = 0;\n        node.COLUMN = 0;\n        node.X = 0;\n        node.Y = 0;\n        node.H = 0;\n        node.W = 0;\n        for (const child of node.SUB) {\n          yield _this2.addAttributs(child);\n        }\n      })();\n    }\n    defineHW(node, shadowRoot) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        shadowRoot.innerHTML = node.CONTENT;\n        const virtualDiv = shadowRoot.querySelector('div');\n        let strHeight;\n        strHeight = virtualDiv.style.height.replace(/px/g, \"\");\n        node.H = strHeight;\n        let strWidth;\n        strWidth = virtualDiv.style.width.replace(/px/g, \"\");\n        node.W = strWidth;\n        for (const child of node.SUB) {\n          yield _this3.defineHW(child, shadowRoot); // Recursively traverse each child\n        }\n      })();\n    }\n\n    drawGraph(node, nodeGraph) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        nodeGraph.innerHTML += (_this4.configGraph.borders.withBorder ? '<rect x=\"' + node.X + '\" y=\"' + node.Y + '\" width=\"' + node.W + '\" height=\"' + node.H + '\" stroke=\"' + _this4.configGraph.borders.stroke + '\" stroke-width=\"' + _this4.configGraph.borders.strokeWidth + '\" fill=\"none\" />' : '') + '<foreignObject x=\"' + node.X + '\" y=\"' + node.Y + '\" width=\"' + node.W + '\" height=\"' + node.H + '\">' + node.CONTENT + '</foreignObject>';\n        for (const child of node.SUB) {\n          yield _this4.drawGraph(child, nodeGraph); // Recursively traverse each child\n        }\n      })();\n    }\n\n    defineCoordinates(node, x, y) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        node.COLUMN = x;\n        node.ROW = y;\n        for (let i = 0; i < node.SUB.length; i++) {\n          if (i != 0) _this5.y = _this5.y + 1; // Increment the X coordinate for each child\n          yield _this5.defineCoordinates(node.SUB[i], x + 1, _this5.y); // Recursively traverse each child with updated coordinates\n        }\n      })();\n    }\n\n    defineMaxDimByRowColumn(node) {\n      var _this6 = this;\n      return _asyncToGenerator(function* () {\n        if (!(node.ROW in _this6.configMaxH)) {\n          _this6.configMaxH[node.ROW] = 0;\n        }\n        if (!(node.COLUMN in _this6.configMaxW)) {\n          _this6.configMaxW[node.COLUMN] = 0;\n        }\n        if (_this6.configMaxH[node.ROW] < node.H) {\n          _this6.configMaxH[node.ROW] = node.H;\n        }\n        if (_this6.configMaxW[node.COLUMN] < node.W) {\n          _this6.configMaxW[node.COLUMN] = node.W;\n        }\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(node.SUB), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const obj = _step.value;\n            {\n              yield _this6.defineMaxDimByRowColumn(obj);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              yield _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      })();\n    }\n    calculeSumValues(object, limit, egnoreLimit) {\n      return _asyncToGenerator(function* () {\n        let sum = 0;\n        for (const key in object) {\n          if (egnoreLimit === true) {\n            sum += Number(object[key]);\n          } else {\n            if (Number(key) < limit) {\n              sum += Number(object[key]);\n            }\n          }\n        }\n        return sum;\n      })();\n    }\n    calculatePositionNode(node) {\n      var _this7 = this;\n      return _asyncToGenerator(function* () {\n        node.X = Number(yield _this7.calculeSumValues(_this7.configMaxW, node.COLUMN, false)) + node.COLUMN * _this7.configGraph.space.w + (node.COLUMN === 0 ? _this7.configGraph.margin.x : 0)\n        // + this.configDim.startx\n        ;\n\n        node.Y = Number(yield _this7.calculeSumValues(_this7.configMaxH, node.ROW, false)) + node.ROW * _this7.configGraph.space.h + (node.ROW === 0 ? _this7.configGraph.margin.y : 0)\n        // + this.configDim.starty\n        ;\n        var _iteratorAbruptCompletion2 = false;\n        var _didIteratorError2 = false;\n        var _iteratorError2;\n        try {\n          for (var _iterator2 = _asyncIterator(node.SUB), _step2; _iteratorAbruptCompletion2 = !(_step2 = yield _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n            const obj = _step2.value;\n            {\n              yield _this7.calculatePositionNode(obj);\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n              yield _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      })();\n    }\n    getGrapheDimension() {\n      var _this8 = this;\n      return _asyncToGenerator(function* () {\n        let somWidth = 0;\n        somWidth = Number(yield _this8.calculeSumValues(_this8.configMaxW, 0, true));\n        let keys = Object.keys(_this8.configMaxW);\n        somWidth += keys.length * _this8.configGraph.space.w;\n        let somHeight = 0;\n        somHeight = Number(yield _this8.calculeSumValues(_this8.configMaxH, 0, true));\n        keys = Object.keys(_this8.configMaxH);\n        somHeight += keys.length * _this8.configGraph.space.h;\n        return {\n          somHeight,\n          somWidth\n        };\n      })();\n    }\n    static #_ = this.ɵfac = function TreeTrackingComponent_Factory(t) {\n      return new (t || TreeTrackingComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TreeTrackingComponent,\n      selectors: [[\"app-tree-tracking\"]],\n      decls: 1,\n      vars: 2,\n      consts: [[\"id\", \"GraphId\", 2, \"border\", \"#666666 groove medium\", \"border-radius\", \"5px\"]],\n      template: function TreeTrackingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelement(0, \"svg\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"width\", ctx.dimGraphe[\"somWidth\"])(\"height\", ctx.dimGraphe[\"somHeight\"]);\n        }\n      }\n    });\n  }\n  return TreeTrackingComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}